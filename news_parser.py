import requests
from bs4 import BeautifulSoup
import telebot
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")

bot = telebot.TeleBot(TOKEN)

# URL —Å–∞–π—Ç–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
URL = "https://www.bbc.com/ukrainian"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
def get_news():
    response = requests.get(URL, headers={"User-Agent": "Mozilla/5.0"})
    if response.status_code != 200:
        return []
    
    soup = BeautifulSoup(response.text, "html.parser")
    articles = soup.find_all("h2")  # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–∞—Ç–µ–π
    
    news_list = []
    for article in articles[:5]:  # –û–≥—Ä–∞–Ω–∏—á–∏–º—Å—è 5 —Å—Ç–∞—Ç—å—è–º–∏
        link_tag = article.find("a")
        if not link_tag or "href" not in link_tag.attrs:
            continue
        
        link = link_tag["href"]
        if link.startswith("/"):
            link = "https://www.bbc.com" + link
        
        title = article.get_text(strip=True)
        news_list.append((title, link))
    
    return news_list

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ Telegram
def send_news_to_telegram():
    news = get_news()  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
    if not news:
        print("–ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
        return

    for title, link in news:
        message = f"*{title}*\n\nüîó [–ß–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç—å—é]({link})"
        bot.send_message(CHANNEL_ID, message, parse_mode="Markdown", disable_web_page_preview=True)
    print("–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram.")

# –ó–∞–ø—É—Å–∫
send_news_to_telegram()
